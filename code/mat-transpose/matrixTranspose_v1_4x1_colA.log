>>> 100 times CPU starting...
CPU 16 x 16 0.000003 s 81.528662 MFLOPS

>>> global_work_size[3]: (4, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 16 x 16 0.000735 s 0.348190 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 32 x 32 0.000072 s 14.214325 MFLOPS

>>> global_work_size[3]: (8, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 32 x 32 0.000439 s 2.332946 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 64 x 64 0.000050 s 82.034849 MFLOPS

>>> global_work_size[3]: (16, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 64 x 64 0.000598 s 6.854427 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 128 x 128 0.000205 s 79.964859 MFLOPS

>>> global_work_size[3]: (32, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 128 x 128 0.000855 s 19.154732 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 256 x 256 0.000900 s 72.855825 MFLOPS

>>> global_work_size[3]: (64, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 256 x 256 0.001790 s 36.608405 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 512 x 512 0.008276 s 31.674823 MFLOPS

>>> global_work_size[3]: (128, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 512 x 512 0.003308 s 79.241633 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 1024 x 1024 0.057428 s 18.258818 MFLOPS

>>> global_work_size[3]: (256, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 1024 x 1024 0.008923 s 117.519240 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 2048 x 2048 0.234092 s 17.917294 MFLOPS

>>> global_work_size[3]: (512, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 2048 x 2048 0.074096 s 56.606700 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 4096 x 4096 0.922155 s 18.193481 MFLOPS

>>> global_work_size[3]: (1024, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 4096 x 4096 0.356805 s 47.020738 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
>>> 100 times CPU starting...
CPU 8192 x 8192 5.093500 s 13.175392 MFLOPS

>>> global_work_size[3]: (2048, 1, 1)
[WARN] global work size is smaller than task size.
>>> 100 times ./matrixTranspose_v1_4x1.cl starting...
GPU 8192 x 8192 2.970549 s 22.591401 MFLOPS ./matrixTranspose_v1_4x1.cl

>>> correct rate: 1.0000
>>> ~ Bingo ~ matrix a == matrix b
./matrixTranspose 16 16 ./matrixTranspose_v1_4x1.cl 100 4 1 1
./matrixTranspose 32 32 ./matrixTranspose_v1_4x1.cl 100 8 1 1
./matrixTranspose 64 64 ./matrixTranspose_v1_4x1.cl 100 16 1 1
./matrixTranspose 128 128 ./matrixTranspose_v1_4x1.cl 100 32 1 1
./matrixTranspose 256 256 ./matrixTranspose_v1_4x1.cl 100 64 1 1
./matrixTranspose 512 512 ./matrixTranspose_v1_4x1.cl 100 128 1 1
./matrixTranspose 1024 1024 ./matrixTranspose_v1_4x1.cl 100 256 1 1
./matrixTranspose 2048 2048 ./matrixTranspose_v1_4x1.cl 100 512 1 1
./matrixTranspose 4096 4096 ./matrixTranspose_v1_4x1.cl 100 1024 1 1
./matrixTranspose 8192 8192 ./matrixTranspose_v1_4x1.cl 100 2048 1 1
